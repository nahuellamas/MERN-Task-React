{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\tareas\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport taskContext from '../../context/Tasks/taskContext';\nimport proyectContext from '../../context/Proyectos/proyectContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task\n}) => {\n  _s();\n\n  const proyectsContext = useContext(proyectContext);\n  const {\n    proyect\n  } = proyectsContext;\n  const [actualProyect] = proyect;\n  const tasksContext = useContext(taskContext);\n  const {\n    deleteTask,\n    getTask,\n    statustask,\n    actualtask\n  } = tasksContext;\n\n  const taskDelete = taskid => {\n    deleteTask(taskid);\n    getTask(actualProyect.id);\n  };\n\n  const taskStatus = task => {\n    if (task.status) {\n      task.status = false;\n    } else {\n      task.status = true;\n    }\n\n    statustask(task);\n  };\n\n  const taskActual = task => {\n    actualtask(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tarea sombra\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estado\",\n      children: task.status ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => taskStatus(task),\n        className: \"completo\",\n        children: \"Completado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => taskStatus(task),\n        className: \"incomleto\",\n        children: \"Incompleto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => taskActual(task),\n        type: \"button\",\n        className: \"btn btn-primario\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => taskDelete(task.id),\n        type: \"button\",\n        className: \"btn btn-secundario\",\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"7OgEMRGAL9stxFDZFpfrmI4uf+Y=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/tareas/Task.jsx"],"names":["useContext","taskContext","proyectContext","Task","task","proyectsContext","proyect","actualProyect","tasksContext","deleteTask","getTask","statustask","actualtask","taskDelete","taskid","id","taskStatus","status","taskActual","name"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,QAAMC,eAAe,GAAGL,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcD,eAApB;AACA,QAAM,CAACE,aAAD,IAAkBD,OAAxB;AAEA,QAAME,YAAY,GAAGR,UAAU,CAACC,WAAD,CAA/B;AACA,QAAM;AAACQ,IAAAA,UAAD;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,MAAgDJ,YAAtD;;AAEA,QAAMK,UAAU,GAAGC,MAAM,IAAI;AACzBL,IAAAA,UAAU,CAACK,MAAD,CAAV;AACAJ,IAAAA,OAAO,CAACH,aAAa,CAACQ,EAAf,CAAP;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAGZ,IAAI,IAAI;AACvB,QAAGA,IAAI,CAACa,MAAR,EAAe;AACXb,MAAAA,IAAI,CAACa,MAAL,GAAc,KAAd;AACH,KAFD,MAEO;AACHb,MAAAA,IAAI,CAACa,MAAL,GAAc,IAAd;AACH;;AACDN,IAAAA,UAAU,CAACP,IAAD,CAAV;AACH,GAPD;;AASA,QAAMc,UAAU,GAAGd,IAAI,IAAI;AACvBQ,IAAAA,UAAU,CAACR,IAAD,CAAV;AACH,GAFD;;AAIA,sBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,4BACI;AAAA,gBAAIA,IAAI,CAACe;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACKf,IAAI,CAACa,MAAL,gBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMD,UAAU,CAACZ,IAAD,CAA/C;AAAuD,QAAA,SAAS,EAAC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMY,UAAU,CAACZ,IAAD,CAA/C;AAAuD,QAAA,SAAS,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACQ;AAAQ,QAAA,OAAO,EAAE,MAAMc,UAAU,CAACd,IAAD,CAAjC;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,SAAS,EAAC,kBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAQ,QAAA,OAAO,EAAE,MAAMS,UAAU,CAACT,IAAI,CAACW,EAAN,CAAjC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAA0D,QAAA,SAAS,EAAC,oBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxCD;;GAAMZ,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import { useContext } from 'react';\r\nimport taskContext from '../../context/Tasks/taskContext';\r\nimport proyectContext from '../../context/Proyectos/proyectContext'\r\n\r\n\r\nconst Task = ({task}) => {\r\n    const proyectsContext = useContext(proyectContext);\r\n    const { proyect } = proyectsContext;\r\n    const [actualProyect] = proyect;\r\n\r\n    const tasksContext = useContext(taskContext);\r\n    const {deleteTask, getTask, statustask, actualtask} = tasksContext;\r\n\r\n    const taskDelete = taskid => {\r\n        deleteTask(taskid);\r\n        getTask(actualProyect.id);\r\n    }\r\n\r\n    const taskStatus = task => {\r\n        if(task.status){\r\n            task.status = false;\r\n        } else {\r\n            task.status = true;\r\n        }\r\n        statustask(task);\r\n    }\r\n\r\n    const taskActual = task => {\r\n        actualtask(task);\r\n    }\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{task.name}</p>\r\n            <div className=\"estado\">\r\n                {task.status\r\n                ? (<button type=\"button\" onClick={() => taskStatus(task)} className=\"completo\">Completado</button>)\r\n                : (<button type=\"button\" onClick={() => taskStatus(task)} className=\"incomleto\">Incompleto</button>) }\r\n            </div>\r\n            <div className=\"acciones\">\r\n                    <button onClick={() => taskActual(task)} type=\"button\" className=\"btn btn-primario\">Editar</button>\r\n                    <button onClick={() => taskDelete(task.id)} type=\"button\" className=\"btn btn-secundario\">Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Task;"]},"metadata":{},"sourceType":"module"}