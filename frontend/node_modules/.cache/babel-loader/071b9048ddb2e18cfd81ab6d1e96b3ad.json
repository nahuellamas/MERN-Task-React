{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\proyectos\\\\ListProyects.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport proyectContext from '../../context/Proyectos/proyectContext';\nimport taskContext from '../../context/Tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProyects = () => {\n  _s();\n\n  const proyectsContext = useContext(proyectContext);\n  const {\n    proyects,\n    getProyects,\n    selectProyect\n  } = proyectsContext;\n  const tasksContext = useContext(taskContext);\n  const {\n    getTask\n  } = tasksContext;\n  useEffect(() => {\n    getProyects();\n  }, []); //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\n  //los condicionales siempre abajo de todo\n\n  if (proyects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje\",\n      children: \"No tienes Proyectos, crea todos los que necesites!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  const proyectoSeleccionado = id => {\n    selectProyect(id); //fijar el proyecto\n\n    getTask(id); //obtener las tareas del proyecto seleccionado\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"listado-proyectos\",\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: proyects.map(proyect => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"item\",\n        timeout: 500,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => proyectoSeleccionado(proyect.id),\n            type: \"button\",\n            className: \"btn btn-black\",\n            children: proyect.proyectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, proyect.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, proyect.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListProyects, \"i//lCr3nVZV1QM5OMIzHm8n1SYs=\");\n\n_c = ListProyects;\nexport default ListProyects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProyects\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/proyectos/ListProyects.jsx"],"names":["useContext","useEffect","proyectContext","taskContext","CSSTransition","TransitionGroup","ListProyects","proyectsContext","proyects","getProyects","selectProyect","tasksContext","getTask","length","proyectoSeleccionado","id","map","proyect","proyectName"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAAQC,aAAR,EAAuBC,eAAvB,QAA6C,wBAA7C;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,eAAe,GAAGP,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAACM,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAyCH,eAA/C;AAEA,QAAMI,YAAY,GAAGX,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAYD,YAAlB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT,CAPuB,CAUvB;AACA;;AACA,MAAGD,QAAQ,CAACK,MAAT,KAAoB,CAAvB,EAA0B;AACtB,wBAAO;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMC,oBAAoB,GAAGC,EAAE,IAAI;AAC/BL,IAAAA,aAAa,CAACK,EAAD,CAAb,CAD+B,CACZ;;AACnBH,IAAAA,OAAO,CAACG,EAAD,CAAP,CAF+B,CAElB;AAChB,GAHD;;AAKA,sBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA,2BACI,QAAC,eAAD;AAAA,gBACSP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,iBACjB,QAAC,aAAD;AAAgC,QAAA,UAAU,EAAC,MAA3C;AAAkD,QAAA,OAAO,EAAE,GAA3D;AAAA,+BACI;AAAA,iCACA;AACI,YAAA,OAAO,EAAG,MAAMH,oBAAoB,CAACG,OAAO,CAACF,EAAT,CADxC;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,SAAS,EAAC,eAHd;AAAA,sBAIEE,OAAO,CAACC;AAJV;AAAA;AAAA;AAAA;AAAA;AADA,WAASD,OAAO,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoBE,OAAO,CAACF,EAA5B;AAAA;AAAA;AAAA;AAAA,cADH;AADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtCD;;GAAMT,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport proyectContext from '../../context/Proyectos/proyectContext';\r\nimport taskContext from '../../context/Tasks/taskContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst ListProyects = () => {\r\n    const proyectsContext = useContext(proyectContext);\r\n    const {proyects, getProyects, selectProyect} = proyectsContext;\r\n\r\n    const tasksContext = useContext(taskContext);\r\n    const {getTask} = tasksContext;\r\n\r\n    useEffect(() => {\r\n        getProyects();\r\n    }, []);\r\n    //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\r\n    //los condicionales siempre abajo de todo\r\n    if(proyects.length === 0) {\r\n        return <p className=\"mensaje\">No tienes Proyectos, crea todos los que necesites!</p>;\r\n    }\r\n\r\n    const proyectoSeleccionado = id => {\r\n        selectProyect(id); //fijar el proyecto\r\n        getTask(id); //obtener las tareas del proyecto seleccionado\r\n    }\r\n\r\n    return ( \r\n        <ul className=\"listado-proyectos\">\r\n            <TransitionGroup>\r\n                    {proyects.map(proyect => (\r\n                        <CSSTransition key={proyect.id} classNames=\"item\" timeout={500}>\r\n                            <li key={proyect.id}>\r\n                            <button\r\n                                onClick={ () => proyectoSeleccionado(proyect.id) }\r\n                                type=\"button\"\r\n                                className=\"btn btn-black\"\r\n                            >{proyect.proyectName}</button>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListProyects;"]},"metadata":{},"sourceType":"module"}