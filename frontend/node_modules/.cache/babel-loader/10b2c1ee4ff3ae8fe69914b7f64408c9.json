{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\context\\\\Tasks\\\\taskState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport clientAxios from '../../config/Axios';\nimport { GET_TASKS, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATUS_TASK, ACTUAL_TASK, UPDATE_TASK } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    taskproyect: [],\n    taskerror: false,\n    selectedtask: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(TaskReducer, initialState); //Actions\n\n  const getTask = async proyect => {\n    try {\n      const response = await clientAxios.get('http://localhost:5000/api/task', {\n        params: {\n          proyect\n        }\n      });\n      console.log(response);\n      dispatch({\n        type: GET_TASKS,\n        payload: response.data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addTask = async task => {\n    console.log(task);\n\n    try {\n      const response = await clientAxios.post('http://localhost:5000/api/task', task);\n      console.log(response);\n      dispatch({\n        type: ADD_TASK,\n        payload: task\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validateTask = () => {\n    dispatch({\n      type: VALIDATE_TASK\n    });\n  };\n\n  const deleteTask = id => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: id\n    });\n  };\n\n  const statustask = task => {\n    dispatch({\n      type: STATUS_TASK,\n      payload: task\n    });\n  };\n\n  const actualtask = task => {\n    dispatch({\n      type: ACTUAL_TASK,\n      payload: task\n    });\n  };\n\n  const updateTask = task => {\n    dispatch({\n      type: UPDATE_TASK,\n      payload: task\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      getTask,\n      taskproyect: state.taskproyect,\n      addTask,\n      taskerror: state.taskerror,\n      validateTask,\n      deleteTask,\n      statustask,\n      actualtask,\n      selectedtask: state.selectedtask,\n      updateTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Tasks/taskState.jsx"],"names":["useReducer","TaskContext","TaskReducer","clientAxios","GET_TASKS","ADD_TASK","VALIDATE_TASK","DELETE_TASK","STATUS_TASK","ACTUAL_TASK","UPDATE_TASK","TaskState","props","initialState","taskproyect","taskerror","selectedtask","state","dispatch","getTask","proyect","response","get","params","console","log","type","payload","data","tasks","error","addTask","task","post","validateTask","deleteTask","id","statustask","actualtask","updateTask","children"],"mappings":"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","sourcesContent":["import {useReducer} from 'react';\r\nimport TaskContext from './taskContext';\r\nimport TaskReducer from './taskReducer';\r\nimport clientAxios from '../../config/Axios';\r\nimport {GET_TASKS,\r\n        ADD_TASK,\r\n        VALIDATE_TASK,\r\n        DELETE_TASK,\r\n        STATUS_TASK,\r\n        ACTUAL_TASK,\r\n        UPDATE_TASK,\r\n    } from   '../../types';\r\n\r\nconst TaskState = props => {\r\n\r\n    const initialState = {\r\n        taskproyect: [],\r\n        taskerror: false,\r\n        selectedtask: null\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n    //Actions\r\n    const getTask = async proyect => {\r\n        try {\r\n            const response = await clientAxios.get('http://localhost:5000/api/task', {params: {proyect}});\r\n            console.log(response);\r\n            dispatch({\r\n                type: GET_TASKS,\r\n                payload: response.data.tasks\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const addTask = async task => {\r\n        console.log(task);\r\n        try {\r\n            const response = await clientAxios.post('http://localhost:5000/api/task', task);\r\n            console.log(response);\r\n            dispatch({\r\n                type: ADD_TASK,\r\n                payload: task\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const validateTask = () => {\r\n        dispatch({\r\n            type: VALIDATE_TASK\r\n        })\r\n    }\r\n\r\n    const deleteTask = id => {\r\n        dispatch({\r\n            type: DELETE_TASK,\r\n            payload: id\r\n        })\r\n    } \r\n\r\n    const statustask = task => {\r\n        dispatch({\r\n            type: STATUS_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const actualtask = task => {\r\n        dispatch({\r\n            type: ACTUAL_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const updateTask = task => {\r\n        dispatch({\r\n            type: UPDATE_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider\r\n            value={{\r\n                getTask,\r\n                taskproyect: state.taskproyect,\r\n                addTask,\r\n                taskerror: state.taskerror,\r\n                validateTask,\r\n                deleteTask,\r\n                statustask,\r\n                actualtask,\r\n                selectedtask: state.selectedtask,\r\n                updateTask\r\n            }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}