{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\context\\\\Auth\\\\authState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clientAxios from '../../config/Axios';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    //guardamos el token en el localstorage\n    authenticated: null,\n    user: null,\n    message: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //funciones\n\n  const registerUser = async data => {\n    try {\n      const response = await clientAxios.post('/api/users', data);\n      console.log(response);\n      dispatch({\n        type: REGISTRO_EXITOSO\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTRO_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      authenticated: state.authenticated,\n      user: state.user,\n      message: state.message,\n      registerUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Auth/authState.jsx"],"names":["React","useReducer","AuthContext","AuthReducer","clientAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","authenticated","user","message","state","dispatch","registerUser","data","response","post","console","log","type","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,aAJJ,EAKIC,WALJ,EAMIC,aANJ,QAOO,aAPP;;;AASA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AACoB;AACrCC,IAAAA,aAAa,EAAE,IAFE;AAGjBC,IAAAA,IAAI,EAAE,IAHW;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,WAAD,EAAcU,YAAd,CAApC,CARuB,CAUvB;;AACA,QAAMS,YAAY,GAAG,MAAMC,IAAN,IAAc;AAC/B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMpB,WAAW,CAACqB,IAAZ,CAAiB,YAAjB,EAA+BF,IAA/B,CAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEvB;AADD,OAAD,CAAR;AAGH,KAND,CAME,OAAOwB,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEtB;AADD,OAAD,CAAR;AAGH;AACJ,GAbD;;AAeA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHG,MAAAA,aAAa,EAAEG,KAAK,CAACH,aAFlB;AAGHC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHT;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHG,MAAAA;AALG,KADX;AAAA,cAQKV,KAAK,CAACkB;AARX;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtCD;;GAAMnB,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport clientAxios from '../../config/Axios';\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),//guardamos el token en el localstorage\r\n        authenticated: null,\r\n        user: null,\r\n        message: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    //funciones\r\n    const registerUser = async data => {\r\n        try {\r\n            const response = await clientAxios.post('/api/users', data);\r\n            console.log(response);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: REGISTRO_ERROR\r\n            });\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                authenticated: state.authenticated,\r\n                user: state.user,\r\n                message: state.message,\r\n                registerUser\r\n            }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}