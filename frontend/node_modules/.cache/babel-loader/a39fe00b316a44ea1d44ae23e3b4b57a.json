{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\context\\\\Tasks\\\\taskState.jsx\",\n    _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { GET_TASKS, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATUS_TASK, ACTUAL_TASK, UPDATE_TASK } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    taskproyect: null,\n    taskerror: false,\n    selectedtask: null\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(TaskReducer, initialState); //Actions\n\n  const getTask = proyectid => {\n    dispatch({\n      type: GET_TASKS,\n      payload: proyectid\n    });\n  };\n\n  const addTask = task => {\n    task.taskid = uuidv4();\n    dispatch({\n      type: ADD_TASK,\n      payload: task\n    });\n  };\n\n  const validateTask = () => {\n    dispatch({\n      type: VALIDATE_TASK\n    });\n  };\n\n  const deleteTask = id => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: id\n    });\n  };\n\n  const statustask = task => {\n    dispatch({\n      type: STATUS_TASK,\n      payload: task\n    });\n  };\n\n  const actualtask = task => {\n    dispatch({\n      type: ACTUAL_TASK,\n      payload: task\n    });\n  };\n\n  const updateTask = task => {\n    dispatch({\n      type: UPDATE_TASK,\n      payload: task\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      getTask,\n      taskproyect: state.taskproyect,\n      addTask,\n      taskerror: state.taskerror,\n      validateTask,\n      deleteTask,\n      statustask,\n      actualtask,\n      selectedtask: state.selectedtask,\n      updateTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Tasks/taskState.jsx"],"names":["v4","uuidv4","useReducer","TaskContext","TaskReducer","GET_TASKS","ADD_TASK","VALIDATE_TASK","DELETE_TASK","STATUS_TASK","ACTUAL_TASK","UPDATE_TASK","TaskState","props","initialState","taskproyect","taskerror","selectedtask","state","dispatch","getTask","proyectid","type","payload","addTask","task","taskid","validateTask","deleteTask","id","statustask","actualtask","updateTask","children"],"mappings":";;;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,SAAR,EACQC,QADR,EAEQC,aAFR,EAGQC,WAHR,EAIQC,WAJR,EAKQC,WALR,EAMQC,WANR,QAOa,aAPb;;;AASA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,WAAW,EAAE,IADI;AAEjBC,IAAAA,SAAS,EAAE,KAFM;AAGjBC,IAAAA,YAAY,EAAE;AAHG,GAArB,CAFuB,CAQvB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,WAAD,EAAcU,YAAd,CAApC,CATuB,CAWvB;;AACA,QAAMM,OAAO,GAAGC,SAAS,IAAI;AACzBF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEjB,SADD;AAELkB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMG,OAAO,GAAGC,IAAI,IAAI;AACpBA,IAAAA,IAAI,CAACC,MAAL,GAAczB,MAAM,EAApB;AACAkB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEhB,QADD;AAELiB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMqB,UAAU,GAAGC,EAAE,IAAI;AACrBV,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEd,WADD;AAELe,MAAAA,OAAO,EAAEM;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,UAAU,GAAGL,IAAI,IAAI;AACvBN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEb,WADD;AAELc,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMM,UAAU,GAAGN,IAAI,IAAI;AACvBN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEZ,WADD;AAELa,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMO,UAAU,GAAGP,IAAI,IAAI;AACvBN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,WADD;AAELY,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,OADG;AAEHL,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFhB;AAGHS,MAAAA,OAHG;AAIHR,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAJd;AAKHW,MAAAA,YALG;AAMHC,MAAAA,UANG;AAOHE,MAAAA,UAPG;AAQHC,MAAAA,UARG;AASHd,MAAAA,YAAY,EAAEC,KAAK,CAACD,YATjB;AAUHe,MAAAA;AAVG,KADX;AAAA,cAaKnB,KAAK,CAACoB;AAbX;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA9ED;;GAAMrB,S;;KAAAA,S;AAiFN,eAAeA,SAAf","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport {useReducer} from 'react';\r\nimport TaskContext from './taskContext';\r\nimport TaskReducer from './taskReducer';\r\nimport {GET_TASKS,\r\n        ADD_TASK,\r\n        VALIDATE_TASK,\r\n        DELETE_TASK,\r\n        STATUS_TASK,\r\n        ACTUAL_TASK,\r\n        UPDATE_TASK,\r\n    } from   '../../types';\r\n\r\nconst TaskState = props => {\r\n\r\n    const initialState = {\r\n        taskproyect: null,\r\n        taskerror: false,\r\n        selectedtask: null\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n    //Actions\r\n    const getTask = proyectid => {\r\n        dispatch({\r\n            type: GET_TASKS,\r\n            payload: proyectid\r\n        })\r\n    }\r\n\r\n    const addTask = task => {\r\n        task.taskid = uuidv4();\r\n        dispatch({\r\n            type: ADD_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const validateTask = () => {\r\n        dispatch({\r\n            type: VALIDATE_TASK\r\n        })\r\n    }\r\n\r\n    const deleteTask = id => {\r\n        dispatch({\r\n            type: DELETE_TASK,\r\n            payload: id\r\n        })\r\n    } \r\n\r\n    const statustask = task => {\r\n        dispatch({\r\n            type: STATUS_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const actualtask = task => {\r\n        dispatch({\r\n            type: ACTUAL_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const updateTask = task => {\r\n        dispatch({\r\n            type: UPDATE_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider\r\n            value={{\r\n                getTask,\r\n                taskproyect: state.taskproyect,\r\n                addTask,\r\n                taskerror: state.taskerror,\r\n                validateTask,\r\n                deleteTask,\r\n                statustask,\r\n                actualtask,\r\n                selectedtask: state.selectedtask,\r\n                updateTask\r\n            }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}