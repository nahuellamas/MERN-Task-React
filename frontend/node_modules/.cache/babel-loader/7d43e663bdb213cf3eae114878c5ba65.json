{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\tareas\\\\FormTask.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from 'react';\nimport proyectContext from '../../context/Proyectos/proyectContext';\nimport taskContext from '../../context/Tasks/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormTask = () => {\n  _s();\n\n  const proyectsContext = useContext(proyectContext);\n  const {\n    proyect\n  } = proyectsContext;\n  const tasksContext = useContext(taskContext);\n  const {\n    addTask,\n    validateTask,\n    taskerror,\n    getTask,\n    taskactual\n  } = tasksContext;\n  const [task, setTask] = useState({\n    name: ''\n  });\n  const {\n    name\n  } = task;\n  useEffect(() => {\n    if (taskactual !== null) {\n      setTask(taskactual);\n    } else {\n      setTask({\n        name: ''\n      });\n    }\n  }, [taskactual]);\n  if (!proyect) return null;\n  const [actualProyect] = proyect;\n\n  const handleChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar\n\n    if (name.trim() === '') {\n      validateTask();\n      return;\n    } //pasarlo al context\n    //Agregar la tarea al state de tareas\n\n\n    task.proyectid = actualProyect.id;\n    task.status = false;\n    addTask(task); //filtramos nuevamente la lista de tareas para que se actualice con la nueva\n\n    getTask(actualProyect.id); //reiniciar el form\n\n    setTask({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: handleChange,\n          className: \"input-text\",\n          type: \"text\",\n          placeholder: \"Nombre de la tarea\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primario btn-submit btn-block\",\n          type: \"submit\",\n          value: \"Agregar Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), taskerror ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El nombre de la tarea es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormTask, \"vvPK8FD9BGHt9DlJCv4jd7tBdek=\");\n\n_c = FormTask;\nexport default FormTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTask\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/tareas/FormTask.jsx"],"names":["useContext","useState","useEffect","proyectContext","taskContext","FormTask","proyectsContext","proyect","tasksContext","addTask","validateTask","taskerror","getTask","taskactual","task","setTask","name","actualProyect","handleChange","e","target","value","onSubmit","preventDefault","trim","proyectid","id","status"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from 'react';\r\nimport proyectContext from '../../context/Proyectos/proyectContext'\r\nimport taskContext from '../../context/Tasks/taskContext';\r\n\r\nconst FormTask = () => {\r\n\r\n    const proyectsContext = useContext(proyectContext);\r\n    const { proyect } = proyectsContext;\r\n\r\n    const tasksContext = useContext(taskContext);\r\n    const {addTask, validateTask, taskerror, getTask, taskactual} = tasksContext;\r\n    const [task, setTask] = useState({\r\n        name: ''\r\n    });\r\n    const { name } = task;\r\n\r\n    useEffect(() => {\r\n        if(taskactual !== null) {\r\n            setTask(taskactual);\r\n        } else {\r\n            setTask({\r\n                name: ''\r\n            });\r\n        }\r\n    }, [taskactual]);\r\n\r\n    if(!proyect) return null;\r\n\r\n    const [actualProyect] = proyect;\r\n\r\n    const handleChange = (e) => {\r\n        setTask({\r\n            ...task,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        //validar\r\n        if(name.trim() === '') {\r\n            validateTask();\r\n            return;\r\n        }\r\n        //pasarlo al context\r\n        //Agregar la tarea al state de tareas\r\n        task.proyectid = actualProyect.id;\r\n        task.status = false;\r\n        addTask(task);\r\n        //filtramos nuevamente la lista de tareas para que se actualice con la nueva\r\n        getTask(actualProyect.id);\r\n        //reiniciar el form\r\n        setTask({\r\n            name: ''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    className=\"input-text\"\r\n                    type=\"text\" \r\n                    placeholder=\"Nombre de la tarea\"\r\n                    name=\"name\"  \r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                    className=\"btn btn-primario btn-submit btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Agregar Tarea\" \r\n                    />\r\n                </div>\r\n            </form>\r\n            {taskerror ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTask;"]},"metadata":{},"sourceType":"module"}