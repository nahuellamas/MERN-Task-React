{"ast":null,"code":"import { GET_TASKS, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATUS_TASK, ACTUAL_TASK, UPDATE_TASK } from '../../types'; //Aque tenemos las condiciones de nuestro State\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_TASKS:\n      return { ...state,\n        taskproyect: action.payload\n      };\n\n    case ADD_TASK:\n      return { ...state,\n        taskproyect: [action.payload, ...state.tasks],\n        taskerror: false\n      };\n\n    case VALIDATE_TASK:\n      return { ...state,\n        taskerror: true\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        taskproyect: state.taskproyect.filter(task => task.id !== action.payload)\n      };\n\n    case STATUS_TASK:\n    case UPDATE_TASK:\n      return { ...state,\n        taskproyect: state.taskproyect.map(task => task.id === action.payload.id ? action.payload : task),\n        selectedtask: null\n      };\n\n    case ACTUAL_TASK:\n      return { ...state,\n        selectedtask: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Tasks/taskReducer.jsx"],"names":["GET_TASKS","ADD_TASK","VALIDATE_TASK","DELETE_TASK","STATUS_TASK","ACTUAL_TASK","UPDATE_TASK","state","action","type","taskproyect","payload","tasks","taskerror","filter","task","id","map","selectedtask"],"mappings":"AAAA,SAAQA,SAAR,EACQC,QADR,EAEQC,aAFR,EAGQC,WAHR,EAIQC,WAJR,EAKQC,WALR,EAMQC,WANR,QAOiB,aAPjB,C,CASA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,SAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAFjB,OAAP;;AAIJ,SAAKV,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHG,QAAAA,WAAW,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACK,KAA1B,CAFV;AAGHC,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAKJ,SAAKX,aAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHM,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKV,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,WAAW,EAAEH,KAAK,CAACG,WAAN,CAAkBI,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAApD;AAFV,OAAP;;AAIJ,SAAKP,WAAL;AACA,SAAKE,WAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHG,QAAAA,WAAW,EAAEH,KAAK,CAACG,WAAN,CAAkBO,GAAlB,CAAsBF,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA3B,GAAgCR,MAAM,CAACG,OAAvC,GAAiDI,IAA/E,CAFV;AAGHG,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAKJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHW,QAAAA,YAAY,EAAEV,MAAM,CAACG;AAFlB,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AApCR;AAsCH,CAvCD","sourcesContent":["import {GET_TASKS, \r\n        ADD_TASK,\r\n        VALIDATE_TASK,\r\n        DELETE_TASK,\r\n        STATUS_TASK,\r\n        ACTUAL_TASK,\r\n        UPDATE_TASK\r\n        } from   '../../types';\r\n\r\n//Aque tenemos las condiciones de nuestro State\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_TASKS:\r\n            return {\r\n                ...state,\r\n                taskproyect: action.payload\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                taskproyect: [action.payload, ...state.tasks],\r\n                taskerror: false\r\n            }\r\n        case VALIDATE_TASK:\r\n            return {\r\n                ...state,\r\n                taskerror: true\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                taskproyect: state.taskproyect.filter(task => task.id !== action.payload)\r\n            }\r\n        case STATUS_TASK:\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                taskproyect: state.taskproyect.map(task => task.id === action.payload.id ? action.payload : task),\r\n                selectedtask: null\r\n            }\r\n        case ACTUAL_TASK:\r\n            return {\r\n                ...state,\r\n                selectedtask: action.payload\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}