{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\proyectos\\\\ListProyects.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport proyectContext from '../../context/Proyectos/proyectContext';\nimport taskContext from '../../context/Tasks/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProyects = () => {\n  _s();\n\n  const proyectsContext = useContext(proyectContext);\n  const {\n    proyects,\n    getProyects,\n    selectProyect\n  } = proyectsContext;\n  const tasksContext = useContext(taskContext);\n  const {\n    getTask\n  } = tasksContext;\n  useEffect(() => {\n    getProyects();\n  }, []); //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\n  //los condicionales siempre abajo de todo\n\n  if (proyects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje\",\n      children: \"No tienes Proyectos, crea todos los que necesites!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  const proyectoSeleccionado = id => {\n    selectProyect(id); //fijar el proyecto\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"listado-proyectos\",\n    children: proyects.map(proyect => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => proyectoSeleccionado(proyect.id),\n        type: \"button\",\n        className: \"btn btn-black\",\n        children: proyect.proyectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, proyect.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListProyects, \"i//lCr3nVZV1QM5OMIzHm8n1SYs=\");\n\n_c = ListProyects;\nexport default ListProyects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProyects\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/proyectos/ListProyects.jsx"],"names":["useContext","useEffect","proyectContext","taskContext","ListProyects","proyectsContext","proyects","getProyects","selectProyect","tasksContext","getTask","length","proyectoSeleccionado","id","map","proyect","proyectName"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,eAAe,GAAGL,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAACI,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAyCH,eAA/C;AACA,QAAMI,YAAY,GAAGT,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAYD,YAAlB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT,CALuB,CAQvB;AACA;;AACA,MAAGD,QAAQ,CAACK,MAAT,KAAoB,CAAvB,EAA0B;AACtB,wBAAO;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMC,oBAAoB,GAAGC,EAAE,IAAI;AAC/BL,IAAAA,aAAa,CAACK,EAAD,CAAb,CAD+B,CACZ;AACtB,GAFD;;AAIA,sBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA,cACKP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,iBACjB;AAAA,6BACA;AACI,QAAA,OAAO,EAAG,MAAMH,oBAAoB,CAACG,OAAO,CAACF,EAAT,CADxC;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,SAAS,EAAC,eAHd;AAAA,kBAIEE,OAAO,CAACC;AAJV;AAAA;AAAA;AAAA;AAAA;AADA,OAASD,OAAO,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/BD;;GAAMT,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport proyectContext from '../../context/Proyectos/proyectContext';\r\nimport taskContext from '../../context/Tasks/taskContext';\r\n\r\nconst ListProyects = () => {\r\n    const proyectsContext = useContext(proyectContext);\r\n    const {proyects, getProyects, selectProyect} = proyectsContext;\r\n    const tasksContext = useContext(taskContext);\r\n    const {getTask} = tasksContext;\r\n    useEffect(() => {\r\n        getProyects();\r\n    }, []);\r\n    //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\r\n    //los condicionales siempre abajo de todo\r\n    if(proyects.length === 0) {\r\n        return <p className=\"mensaje\">No tienes Proyectos, crea todos los que necesites!</p>;\r\n    }\r\n\r\n    const proyectoSeleccionado = id => {\r\n        selectProyect(id); //fijar el proyecto\r\n    }\r\n\r\n    return ( \r\n        <ul className=\"listado-proyectos\">\r\n            {proyects.map(proyect => (\r\n                <li key={proyect.id}>\r\n                <button\r\n                    onClick={ () => proyectoSeleccionado(proyect.id) }\r\n                    type=\"button\"\r\n                    className=\"btn btn-black\"\r\n                >{proyect.proyectName}</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListProyects;"]},"metadata":{},"sourceType":"module"}