{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\proyectos\\\\ListProyects.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport proyectContext from \"../../context/Proyectos/proyectContext\";\nimport taskContext from \"../../context/Tasks/taskContext\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport alertaContext from '../../context/Alertas/alertaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProyects = () => {\n  _s();\n\n  const proyectsContext = useContext(proyectContext);\n  const {\n    msg,\n    proyects,\n    getProyects,\n    selectProyect\n  } = proyectsContext;\n  const tasksContext = useContext(taskContext);\n  const {\n    getTask\n  } = tasksContext;\n  const alertaContext = useContext(alertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = alertaContext;\n  useEffect(() => {\n    //si hay un error\n    if (msg) {\n      mostrarAlerta(msg.msg, msg.category);\n    }\n\n    getProyects(); // eslint-disable-next-line\n  }, []); //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\n  //los condicionales siempre abajo de todo\n\n  if (proyects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje\",\n      children: \"No tienes Proyectos, crea todos los que necesites!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  const proyectoSeleccionado = id => {\n    selectProyect(id); //fijar el proyecto\n\n    getTask(id); //obtener las tareas del proyecto seleccionado\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"listado-proyectos\",\n    children: [alerta ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alerta ${alerta.category}`,\n      children: alerta.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: proyects.map(proyect => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"item\",\n        timeout: 500,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => proyectoSeleccionado(proyect._id),\n            type: \"button\",\n            className: \"btn btn-black\",\n            children: proyect.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, proyect._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListProyects, \"LfYt1KBtlb0xLBJWfwLfVCCvfPc=\");\n\n_c = ListProyects;\nexport default ListProyects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProyects\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/proyectos/ListProyects.jsx"],"names":["useContext","useEffect","proyectContext","taskContext","CSSTransition","TransitionGroup","alertaContext","ListProyects","proyectsContext","msg","proyects","getProyects","selectProyect","tasksContext","getTask","alerta","mostrarAlerta","category","length","proyectoSeleccionado","id","map","proyect","_id","name"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,eAAe,GAAGR,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAAgDJ,eAAtD;AAEA,QAAMK,YAAY,GAAGb,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcD,YAApB;AAEA,QAAMP,aAAa,GAAGN,UAAU,CAACM,aAAD,CAAhC;AACA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BV,aAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIQ,GAAJ,EAAS;AACPO,MAAAA,aAAa,CAACP,GAAG,CAACA,GAAL,EAAUA,GAAG,CAACQ,QAAd,CAAb;AACD;;AACDN,IAAAA,WAAW,GALG,CAMd;AACD,GAPQ,EAON,EAPM,CAAT,CAVyB,CAkBzB;AACA;;AACA,MAAID,QAAQ,CAACQ,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBACE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,oBAAoB,GAAIC,EAAD,IAAQ;AACnCR,IAAAA,aAAa,CAACQ,EAAD,CAAb,CADmC,CAChB;;AACnBN,IAAAA,OAAO,CAACM,EAAD,CAAP,CAFmC,CAEtB;AACd,GAHD;;AAKA,sBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA,eACGL,MAAM,gBAAI;AAAK,MAAA,SAAS,EAAG,UAASA,MAAM,CAACE,QAAS,EAA1C;AAAA,gBAA8CF,MAAM,CAACN;AAArD;AAAA;AAAA;AAAA;AAAA,YAAJ,GAAuE,IADhF,eAEE,QAAC,eAAD;AAAA,gBACGC,QAAQ,CAACW,GAAT,CAAcC,OAAD,iBACZ,QAAC,aAAD;AAAiC,QAAA,UAAU,EAAC,MAA5C;AAAmD,QAAA,OAAO,EAAE,GAA5D;AAAA,+BACE;AAAA,iCACE;AACE,YAAA,OAAO,EAAE,MAAMH,oBAAoB,CAACG,OAAO,CAACC,GAAT,CADrC;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAC,eAHZ;AAAA,sBAKGD,OAAO,CAACE;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBF,OAAO,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArDD;;GAAMhB,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport proyectContext from \"../../context/Proyectos/proyectContext\";\r\nimport taskContext from \"../../context/Tasks/taskContext\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport alertaContext from '../../context/Alertas/alertaContext';\r\n\r\nconst ListProyects = () => {\r\n  const proyectsContext = useContext(proyectContext);\r\n  const { msg, proyects, getProyects, selectProyect } = proyectsContext;\r\n\r\n  const tasksContext = useContext(taskContext);\r\n  const { getTask } = tasksContext;\r\n\r\n  const alertaContext = useContext(alertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  useEffect(() => {\r\n    //si hay un error\r\n    if (msg) {\r\n      mostrarAlerta(msg.msg, msg.category);\r\n    }\r\n    getProyects();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  //los useeffect se ejecutan cuando el componente se monta y cuando se desmonta\r\n  //los condicionales siempre abajo de todo\r\n  if (proyects.length === 0) {\r\n    return (\r\n      <p className=\"mensaje\">\r\n        No tienes Proyectos, crea todos los que necesites!\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const proyectoSeleccionado = (id) => {\r\n    selectProyect(id); //fijar el proyecto\r\n    getTask(id); //obtener las tareas del proyecto seleccionado\r\n  };\r\n\r\n  return (\r\n    <ul className=\"listado-proyectos\">\r\n      {alerta ? (<div className={`alerta ${alerta.category}`}>{alerta.msg}</div>) : null}\r\n      <TransitionGroup>\r\n        {proyects.map((proyect) => (\r\n          <CSSTransition key={proyect._id} classNames=\"item\" timeout={500}>\r\n            <li>\r\n              <button\r\n                onClick={() => proyectoSeleccionado(proyect._id)}\r\n                type=\"button\"\r\n                className=\"btn btn-black\"\r\n              >\r\n                {proyect.name}\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListProyects;\r\n"]},"metadata":{},"sourceType":"module"}