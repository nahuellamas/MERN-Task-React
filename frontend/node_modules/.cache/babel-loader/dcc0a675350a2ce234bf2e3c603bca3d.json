{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\context\\\\Auth\\\\authState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clientAxios from '../../config/Axios';\nimport tokenAuth from '../../config/token';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    //guardamos el token en el localstorage\n    authenticated: null,\n    user: null,\n    message: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //funciones\n\n  const registerUser = async data => {\n    try {\n      const response = await clientAxios.post('http://localhost:5000/api/users', data);\n      console.log(response);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: response.data\n      }); //obtener usuario\n\n      loginUser();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alert\n      });\n    }\n  };\n\n  const loginUser = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      // funcion para enviar el token en el header\n      tokenAuth(token);\n    }\n\n    try {\n      const response = await clientAxios.get('http://localhost:5000/api/auth');\n      console.log(response);\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: response.data.user\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; //inicio de sesion \n\n\n  const login = async data => {\n    try {\n      const response = await clientAxios.post('http://localhost:5000/api/auth', data);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: response.data\n      }); //obtener usuario\n\n      loginUser();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alert\n      });\n    }\n  }; //cerrar sesion\n\n\n  const logout = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      authenticated: state.authenticated,\n      user: state.user,\n      message: state.message,\n      registerUser,\n      loginUser,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Auth/authState.jsx"],"names":["React","useReducer","AuthContext","AuthReducer","clientAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","authenticated","user","message","loading","state","dispatch","registerUser","data","response","post","console","log","type","payload","loginUser","error","msg","alert","category","get","login","logout","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport clientAxios from '../../config/Axios';\r\nimport tokenAuth from '../../config/token';\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),//guardamos el token en el localstorage\r\n        authenticated: null,\r\n        user: null,\r\n        message: null,\r\n        loading: true\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    //funciones\r\n    const registerUser = async data => {\r\n        try {\r\n            const response = await clientAxios.post('http://localhost:5000/api/users', data);\r\n            console.log(response);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: response.data\r\n            });\r\n\r\n            //obtener usuario\r\n            loginUser();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alert = {\r\n                msg: error.response.data.msg,\r\n                category: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alert\r\n            });\r\n        }\r\n    };\r\n\r\n    const loginUser = async () => {\r\n        const token = localStorage.getItem('token');\r\n         if(token){\r\n             // funcion para enviar el token en el header\r\n            tokenAuth(token);\r\n         }\r\n         try {\r\n             const response = await clientAxios.get('http://localhost:5000/api/auth');\r\n             console.log(response);\r\n                dispatch({\r\n                    type: OBTENER_USUARIO,\r\n                    payload: response.data.user\r\n                });\r\n         } catch (error) {\r\n             console.log(error.response);\r\n             dispatch({\r\n                    type: LOGIN_ERROR,\r\n                });\r\n         }\r\n    };\r\n    \r\n    //inicio de sesion \r\n    const login = async data => {\r\n        try {\r\n            const response = await clientAxios.post('http://localhost:5000/api/auth', data);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: response.data\r\n            })\r\n\r\n            //obtener usuario\r\n            loginUser();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alert = {\r\n                msg: error.response.data.msg,\r\n                category: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alert\r\n            });\r\n        }\r\n    }\r\n\r\n    //cerrar sesion\r\n    const logout = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION,\r\n        });\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                authenticated: state.authenticated,\r\n                user: state.user,\r\n                message: state.message,\r\n                registerUser,\r\n                loginUser,\r\n                login,\r\n                logout\r\n            }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}