{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\components\\\\tareas\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport taskContext from '../../context/Tasks/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task\n}) => {\n  _s();\n\n  const tasksContext = useContext(taskContext);\n  const {\n    addTask,\n    validateTask,\n    taskerror,\n    getTask\n  } = tasksContext;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tarea sombra\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estado\",\n      children: task.status ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"completo\",\n        children: \"Completado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"incomleto\",\n        children: \"Incompleto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primario\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secundario\",\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"E/rPqYjyJtKfxeKuPl5hrnedc4Q=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/components/tareas/Task.jsx"],"names":["useContext","taskContext","Task","task","tasksContext","addTask","validateTask","taskerror","getTask","name","status"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,QAAMC,YAAY,GAAGJ,UAAU,CAACC,WAAD,CAA/B;AACA,QAAM;AAACI,IAAAA,OAAD;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAA8CJ,YAApD;AAGA,sBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,4BACI;AAAA,gBAAID,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACKN,IAAI,CAACO,MAAL,gBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnBD;;GAAMR,I;;KAAAA,I;AAqBN,eAAeA,IAAf","sourcesContent":["import { useContext } from 'react';\r\nimport taskContext from '../../context/Tasks/taskContext';\r\n\r\n\r\nconst Task = ({task}) => {\r\n    const tasksContext = useContext(taskContext);\r\n    const {addTask, validateTask, taskerror, getTask} = tasksContext;\r\n\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{task.name}</p>\r\n            <div className=\"estado\">\r\n                {task.status\r\n                ? (<button type=\"button\" className=\"completo\">Completado</button>)\r\n                : (<button type=\"button\" className=\"incomleto\">Incompleto</button>) }\r\n            </div>\r\n            <div className=\"acciones\">\r\n                    <button type=\"button\" className=\"btn btn-primario\">Editar</button>\r\n                    <button type=\"button\" className=\"btn btn-secundario\">Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Task;"]},"metadata":{},"sourceType":"module"}