{"ast":null,"code":"import { GET_TASKS, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATUS_TASK, ACTUAL_TASK } from '../../types'; //Aque tenemos las condiciones de nuestro State\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_TASKS:\n      return { ...state,\n        taskproyect: state.tasks.filter(task => task.proyectid === action.payload)\n      };\n\n    case ADD_TASK:\n      return { ...state,\n        tasks: [action.payload, ...state.tasks],\n        taskerror: false\n      };\n\n    case VALIDATE_TASK:\n      return { ...state,\n        taskerror: true\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        tasks: state.tasks.filter(task => task.taskid !== action.payload)\n      };\n\n    case STATUS_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.taskid === action.payload.id ? action.payload : task)\n      };\n\n    case ACTUAL_TASK:\n      return { ...state,\n        taskactual: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Tasks/taskReducer.jsx"],"names":["GET_TASKS","ADD_TASK","VALIDATE_TASK","DELETE_TASK","STATUS_TASK","ACTUAL_TASK","state","action","type","taskproyect","tasks","filter","task","proyectid","payload","taskerror","taskid","map","id","taskactual"],"mappings":"AAAA,SAAQA,SAAR,EACQC,QADR,EAEQC,aAFR,EAGQC,WAHR,EAIQC,WAJR,EAKQC,WALR,QAMiB,aANjB,C,CAQA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHG,QAAAA,WAAW,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBN,MAAM,CAACO,OAArD;AAFV,OAAP;;AAIJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHI,QAAAA,KAAK,EAAE,CAACH,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACI,KAA1B,CAFJ;AAGHK,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAKJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHS,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACI,MAAL,KAAgBT,MAAM,CAACO,OAAlD;AAFJ,OAAP;;AAIJ,SAAKV,WAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYO,GAAZ,CAAgBL,IAAI,IAAIA,IAAI,CAACI,MAAL,KAAgBT,MAAM,CAACO,OAAP,CAAeI,EAA/B,GAAoCX,MAAM,CAACO,OAA3C,GAAqDF,IAA7E;AAFJ,OAAP;;AAIJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHa,QAAAA,UAAU,EAAEZ,MAAM,CAACO;AAFhB,OAAP;;AAIJ;AACI,aAAOR,KAAP;AAjCR;AAmCH,CApCD","sourcesContent":["import {GET_TASKS, \r\n        ADD_TASK,\r\n        VALIDATE_TASK,\r\n        DELETE_TASK,\r\n        STATUS_TASK,\r\n        ACTUAL_TASK\r\n        } from   '../../types';\r\n\r\n//Aque tenemos las condiciones de nuestro State\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_TASKS:\r\n            return {\r\n                ...state,\r\n                taskproyect: state.tasks.filter(task => task.proyectid === action.payload)\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: [action.payload, ...state.tasks],\r\n                taskerror: false\r\n            }\r\n        case VALIDATE_TASK:\r\n            return {\r\n                ...state,\r\n                taskerror: true\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(task => task.taskid !== action.payload)\r\n            }\r\n        case STATUS_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => task.taskid === action.payload.id ? action.payload : task)\r\n            }\r\n        case ACTUAL_TASK:\r\n            return {\r\n                ...state,\r\n                taskactual: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}