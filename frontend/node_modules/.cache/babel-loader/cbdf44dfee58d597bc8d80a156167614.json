{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maikol\\\\Desktop\\\\mern task\\\\front\\\\src\\\\context\\\\Tasks\\\\taskState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    tasks: []\n  }; //Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(TaskReducer, initialState); //Actions\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/Maikol/Desktop/mern task/front/src/context/Tasks/taskState.jsx"],"names":["useReducer","TaskContext","TaskReducer","TaskState","props","initialState","tasks","state","dispatch","children"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE;AADU,GAArB,CAFuB,CAMvB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACE,WAAD,EAAcG,YAAd,CAApC,CAPuB,CASvB;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAA,cACKD,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;GAAMN,S;;KAAAA,S;AAmBN,eAAeA,SAAf","sourcesContent":["import {useReducer} from 'react';\r\nimport TaskContext from './taskContext';\r\nimport TaskReducer from './taskReducer';\r\n\r\nconst TaskState = props => {\r\n\r\n    const initialState = {\r\n        tasks: [],\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n    //Actions\r\n\r\n    return (\r\n        <TaskContext.Provider>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}